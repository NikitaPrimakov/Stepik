import math 

# Упражнение 1

# На вход программе подаются два целых числа a и b (a ≤ b). Напишите программу, 
# которая подсчитывает количество чисел в диапазоне от a до b (включительно), куб которых оканчивается на 4 или 9.
count = 0
numOne = int(input("Введите первое число: "))
numTwo = int(input("Введите второе число: "))

if numOne <= numTwo:
    for i in range(numOne, numTwo+1):
        if ((i ** 3) % 10 == 4) or ((i ** 3) % 10 == 9):
            count += 1
print(count)


# Упражнение 2

# На вход программе подаются натуральное число n, а затем n целых чисел, 
# каждое на отдельной строке. Напишите программу, которая подсчитывает 
# сумму введённых чисел (не включая само число n).

count = 0
numOfRange = int(input("Введите число num: "))
for i in range(numOfRange):
    numOfSum = int(input("Введите число для суммы: "))
    count += numOfSum
print(count)


# Упражнение 3

# На вход программе подаётся натуральное число n. 
# Напишите программу, которая вычисляет значение выражения

# (1 + 1/2 + 1/3 + ... + 1/n) - ln(n)

n = int(input("Введите число n: "))

numOne = 1
numTwo = math.log(n)

for i in range(1, n):
    numOne = numOne + (1/(i+1))
    
numOne -= numTwo
print("Искомое число: ", numOne)


# Упражнение 4

# На вход программе подаётся натуральное число n. Напишите программу, которая подсчитывает сумму тех чисел от 
# 1 до n (включительно), квадрат которых оканчивается на 2,5 или 8.

n = int(input("Введите число n: "))
sumOfNum = 0

for i in range(1, n+1):
    if ((i ** 2) % 10 == 2) or ((i ** 2) % 10 == 5) or ((i ** 2) % 10 == 8):
        sumOfNum += i
print("Сумма:", sumOfNum)

# Упражнение 5

# На вход программе подаётся натуральное число n. 
# Напишите программу, которая вычисляет n!.

n = int(input())
total = 1
for i in range(1, n + 1): # включительно
    total *= i
print(total)


# Упражнение 6

# Напишите программу, которая считывает 10 чисел и выводит произведение отличных от нуля чисел.

results = 1

for i in range(10):
    num = int(input("Введите число:"))
    if (num > 0) or (num < 0):
        results = results * num
print(results)


# Упражнение 7

# На вход программе подаётся натуральное число n. Напишите программу, которая вычисляет сумму всех его делителей.

n = int(input("Введите число n:"))
summOfdivider = 0
for i in range(1, n+1):
    if n % i == 0:
        summOfdivider = summOfdivider + i
print(summOfdivider)


# Упражнение 8

# На вход программе подаётся натуральное число n. Напишите программу вычисления знакочередующейся суммы:
# Рассмотрим 2-й тест. Для числа n=5 у нас будет следующая сумма: 1−2+3−4+5=3.

n = int(input("Input your number: "))

results = 0

for i in range(n+1):
    if i % 2 == 0:
        i = -i
    print(i)
    results = results + i
print(results)


# Упражнение 9

# На вход программе подаются натуральное число n(n≥2), 
# а затем n различных натуральных чисел последовательности, каждое на отдельной строке. 
# Напишите программу, которая выводит наибольшее и второе наибольшее число последовательности.

maxOne = 0
maxTwo = 1

n = int(input("Введите число n: "))

for i in range(n):
    num = int(input("Введите число: "))
    if num > maxOne:
        maxTwo = maxOne
        maxOne = num
    elif num > maxTwo:
        maxTwo = num


print(maxOne)
print(maxTwo)


# Упражнение 10

# Напишите программу, которая считывает последовательность из 10 целых чисел и определяет,
# является ли каждое из них чётным или нет.

flag = True

for i in range(10):
    n = int(input(f"Введите число {i+1}: "))
    if n % 2 != 0:
        flag = False

if flag:
    print("Все числа чётные.")
else:
    print("Не все числа чётные.")

# Пояснение: 

# 1) Мы инициализируем флаг all_even значением True, предполагая, что все числа будут чётными.

# 2) Затем мы в цикле считываем 10 чисел.

# 3) Для каждого числа проверяем, является ли оно чётным. Если число нечётное, флаг all_even устанавливается в False.

# 4) После завершения цикла проверяем значение флага. Если оно осталось True, значит все числа чётные. 
# Если флаг стал False, значит хотя бы одно число было нечётным.


# Упражнение 11

# Напишите программу, которая считывает натуральное число n и выводит первые n чисел последовательности Фибоначчи.

# Считываем число n от пользователя
n = int(input("Введите натуральное число n: "))

# Инициализируем первые два числа последовательности
fib_sequence = [1, 1]

# Генерируем последовательность до n чисел
for i in range(2, n):
    next_value = fib_sequence[-1] + fib_sequence[-2]
    fib_sequence.append(next_value)

# Выводим первые n чисел последовательности Фибоначчи через пробел
print("Первые", n, "чисел последовательности Фибоначчи:")
print(" ".join(map(str, fib_sequence[:n])))

# Другой способ

n = int(input())
a, b = 1, 1

for i in range(n):
    print(a, end=' ')
    a, b = b, a + b