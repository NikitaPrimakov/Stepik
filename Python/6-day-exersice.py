#####################################################
## День 6. Решение задач                            #
#####################################################

# Задача 1

# Напишите программу, определяющую евклидово расстояние между двумя точками, координаты которых заданы.

import math

x1 = float(input("Enter x1: "))
y1 = float(input("Enter y1: "))

x2 = float(input("Enter x2: "))
y2 = float(input("Enter y2: "))

print(math.sqrt(math.pow((x1-x2), 2) + math.pow((y1-y2), 2)))


# Задача 2

# Напишите программу, определяющую площадь круга и длину окружности по заданному радиусу R.

radius = float(input("Enter radius of circle: "))
print("Площадь окружности:", math.pi * math.pow(radius, 2))
print("Длина окружности радиуса:", 2 * math.pi * radius)


# Задача 3
# Программа должна вывести 4 числа (каждое на отдельной строке) – среднее арифметическое, геометрическое, 
# гармоническое и квадратичное.

a = float(input())
b = float(input())

print("среднее арифметическое чисел a и b:", (a + b)/2)
print("среднее геометрическое чисел a и b:", math.sqrt(a*b))
print("среднее гармоническое чисел a и b:", (a*b*2)/(a+b))
print("среднее квадратичное чисел a и b:", math.sqrt((a**2 + b**2)/2))

# Задача 4

# Напишите программу, вычисляющую значение тригонометрического выражения
# sin⁡x + cosx + tan^2(x)

x = float(input("Enter x: "))

r = (x*math.pi)/180

print(math.sin(r) + math.cos(r) + math.tan(r)**2)



# Задача 5

# Напишите программу по решению квадратного уровнения.

a = float(input("Enter a: "))
b = float(input("Enter b: "))
c = float(input("Enter c: "))


D = b**2 - (4 * a * c)
print("Дескриминант =", D)
if D > 0:
    print("Уровнение имеет два корня")
    x1 = (-b + math.sqrt(D))/(2*a)
    x2 = (-b - math.sqrt(D))/(2*a)
    if x1 < x2:
        print('x1 =', x1) # выводим сначала наименьшее, потом наибольшее
        print('x2 =', x2)
    else:
        print('x2 =', x2)
        print('x1 =', x1)
elif D == 0:
    print("Уровнение имеет один корень")
    x1 = - (b/(2*a))
    print('x =', x1)
else:
    print("Нет корней")
    