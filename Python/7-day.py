#####################################################
## День 5. Тема урока: цикл for                     #
#####################################################

## Цикл for
# ---------

# В Python существует две основных разновидности циклов:

#   циклы, повторяющиеся определенное количество раз (for, счетные циклы, counting loops);
#   циклы, повторяющиеся до наступления определенного события (while, условные циклы, conditional loops).

# Цикл for замечательно работает, если мы заранее знаем, сколько повторений (итераций) нам требуется сделать.

# Рассмотрим код, который распечатает 10 раз слово "Привет":

for i in range(10):
    print('Привет')

# for название_переменной_цикла in range(количество_повторений):
#    блок кода

# В предыдущих уроках мы считывали несколько чисел при помощи нескольких команд input(). 
# С помощью цикла for можно считывать и обрабатывать сколько угодно чисел.

for i in range(5):
    num = int(input())
    print("Квадрат вашего числа равен:", num * num)

print("Цикл завершен")

# Такая программа считывает 5 чисел и выводит на экран их квадраты вместе с поясняющей надписью. 
# Поскольку вторая и третья строки выделены отступом, Python считает, что это тело цикла, которое выполняется 
# 5 раз. Четвертая строка не содержит отступа, поэтому не является частью цикла и будет выполнена всего один 
# раз, после того как цикл завершится.

# Примеры

# №1

print("A")
print("B")

for i in range(5):
    print("C")
    print("D")

print("E")


## Переменная цикла
# -----------------

# Давайте еще раз взглянем на базовую структуру цикла for:

# for название_переменной_цикла in range(количество_повторений):
#    блок кода

# Не совсем понятно, для чего нужна и как работает переменная цикла.

for i in range(10):
    print(i)

# Результатом выполнения такого кода будет:

# 0
# 1
# 2
# 3
# 4
# 5
# 6
# 7
# 8
# 9

# Когда цикл впервые начинает работу, Python устанавливает значение переменной цикла i = 0. 
# Каждый раз, когда мы повторяем тело цикла, Python увеличивает значение переменной на 1.

# Поскольку переменная цикла i увеличивается на 1 каждый раз, то ее можно использовать 
# для отслеживания номера итерации, на которой мы находимся в циклическом процессе.

for i in range(10):
    print(i, '-- Привет')
# 0 -- Привет
# 1 -- Привет
# 2 -- Привет
# 3 -- Привет
# 4 -- Привет
# 5 -- Привет
# 6 -- Привет
# 7 -- Привет
# 8 -- Привет
# 9 -- Привет

# Если мы хотим начать с 1, то можем написать код:

for i in range(10):
    print(i + 1, '-- Привет')

# Результатом выполнения такого кода будет:

# 1 -- Привет
# 2 -- Привет
# 3 -- Привет
# 4 -- Привет
# 5 -- Привет
# 6 -- Привет
# 7 -- Привет
# 8 -- Привет
# 9 -- Привет
# 10 -- Привет

## Имена переменных цикла
# -----------------------

# Ранее говорилось, что имена переменных должны носить осмысленный характер и описывать их назначение.
# Однако для переменных цикла иногда делаются исключения. В программировании для переменных цикла обычно
# используют буквы i, j, k.

# Следующие две программы абсолютно одинаковые: в первой программе переменная цикла имеет название i, 
# во второй программе – number:

for i in range(10):
    print(i)
for number in range(10):
    print(number)

# Бывают ситуации, когда переменная цикла не используется в теле цикла. В таком случае, вместо того, чтобы давать ей имя, мы можем указать символ нижнего подчеркивания _:

for _ in range(5):
    print('Python - awesome!')

# Результат будет таким:

# Python - awesome!
# Python - awesome!
# Python - awesome!
# Python - awesome!
# Python - awesome!

# Примечание. Следует помнить, что правая граница цикла в Python всегда не включительна. 
# Таким образом следующий код:

for i in range(5):
    print(i)

# распечатает числа от 0 до 4:

# 0
# 1
# 2
# 3
# 4

# Если требуется распечатать числа от 1 до 5, то мы пишем код:

for i in range(5):
    print(i + 1)

