#####################################################
## День 3. Тема урока: условный оператор            #
#####################################################

## Условный оператор if-else
#---------------------------

# В Python проверка условия осуществляется при помощи ключевого слова if.

# Рассмотрим следующую программу:

answer = input('Какой язык программирования мы изучаем? ')
if answer == 'Python':
    print('Верно! Мы ботаем Python =)')
    print('Python - отличный язык!')
    
# Программа просит пользователя ввести текст и проверяет результат ввода. 
# Если введенный текст равен строке «Python», то выводит пользователю текст:

# Вывод:
# Верно! Мы ботаем Python =)
# Python - отличный язык!


# Двоеточие (:) в конце строки с инструкцией if сообщает интерпретатору Python, что дальше находится блок команд. 
# В блок команд входят все строки с отступом под строкой с инструкцией if, вплоть до следующей строки без отступа.

# Если условие истинно, выполняется весь расположенный ниже блок. В предыдущем примере блок инструкций составляет третья и четвертая 
# строки программы.

# Блоком кода называют объединенные друг с другом строки. 
# Они всегда связаны с определенной частью программы (например, с инструкцией if). В Python блоки кода формируются при помощи отступов.


# Предыдущая программа выводит текст в случае, если условие истинно. Но если условие ложно, то программа ничего не выводит. 
# Для того чтобы обеспечить возможность выполнять что-либо в случае, если условие оказалось ложным, мы используем ключевое слово else.

answer = input('Какой язык программирования мы изучаем? ')
if answer == 'Python':
    print('Верно! Мы ботаем Python =)')
    print('Python - отличный язык!')
else:
    print("Не верно!")

# При вводе значения C++ выводит "Не верно"

# В новой программе мы обрабатываем сразу два случая: если условие истинно (пользователь ввел «Python»), 
# и если условие ложно (пользователь ввел что угодно, кроме «Python»).

# Стоит здесь акцент на отступах.
# По соглашению PEP 8, для отступа блоков кода используются 4 пробела. 
# Если в среде VS Code или Wing IDE нажать на клавишу Enter после if, она автоматически выставит 4 пробела.

## Операторы сравнения
#---------------------------

# Оператор присваивания (=) присваивает переменным значения:

num = 1992
s = 'I love Python'

# Для проверки двух элементов на равенство Python использует удвоенный знак равно (==). Вот так:

# if answer == 'Python': 
# if temperature == 40:

# Пример:
num1 = int(input())
num2 = int(input())

if num1 < num2:
    print(num1, 'меньше чем', num2)
if num1 > num2:
    print(num1, 'больше чем', num2)

if num1 == num2:  # используем двойное равенство
    print(num1, 'равно', num2)
if num1 != num2:
    print(num1, 'не равно', num2)
    
    
## Цепочки сравнений
#---------------------------

# Операторы сравнения в Python можно объединять в цепочки (в отличие от большинства других языков программирования, 
# где для этого нужно использовать логические связки), например, a == b == c или 1 <= x <= 10. Следующий код проверяет, 
# находится ли значение переменной age в диапазоне от 3 до 6:

age = int(input())
if 3 <= age <= 6:
    print('Вы ребёнок')
    
# Код, проверяющий равенство трех переменных, может выглядеть так:

# if a == b == c:
#     print('числа равны')
# else:
#     print('числа не равны')



## Транзитивность
#---------------------------

# Операция равенства является транзитивной. Это означает, что если a == b и b == c, то из этого следует, что a == c.
# Именно поэтому предыдущий код, проверяющий равенство трех переменных, работает, как полагается.

# Операция неравенства (!=), в отличие от операции равенства (==), является нетранзитивной. 
# То есть из того, что a != b и b != c вовсе не следует, что a != c. Действительно, если вас зовут не так, как соседа слева и не так, 
# как соседа справа, то нет гарантии, что у обоих соседей не окажутся одинаковые имена.

# Таким образом, следующий код вовсе не проверяет тот факт, что все три переменные различны:

# if a != b != c:
#     print('числа не равны')
# else:
#     print('числа равны')

